[{"/Users/observe.ai_36/Desktop/live-code-share/src/index.js":"1","/Users/observe.ai_36/Desktop/live-code-share/src/reportWebVitals.js":"2","/Users/observe.ai_36/Desktop/live-code-share/src/firebase-config.js":"3","/Users/observe.ai_36/Desktop/live-code-share/src/components/App/App.js":"4","/Users/observe.ai_36/Desktop/live-code-share/src/components/Editor/Editor.js":"5","/Users/observe.ai_36/Desktop/live-code-share/src/components/common/button/index.js":"6","/Users/observe.ai_36/Desktop/live-code-share/src/components/common/checkButton/index.js":"7","/Users/observe.ai_36/Desktop/live-code-share/src/utils/firebaseRealtime.js":"8"},{"size":946,"mtime":1611207548614,"results":"9","hashOfConfig":"10"},{"size":364,"mtime":1610781162469,"results":"11","hashOfConfig":"10"},{"size":413,"mtime":1610781162468,"results":"12","hashOfConfig":"10"},{"size":4308,"mtime":1611207548612,"results":"13","hashOfConfig":"10"},{"size":1551,"mtime":1610781162468,"results":"14","hashOfConfig":"10"},{"size":306,"mtime":1611207548613,"results":"15","hashOfConfig":"10"},{"size":638,"mtime":1611207548614,"results":"16","hashOfConfig":"10"},{"size":343,"mtime":1611207548615,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pjo0tc",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/observe.ai_36/Desktop/live-code-share/src/index.js",[],"/Users/observe.ai_36/Desktop/live-code-share/src/reportWebVitals.js",[],[],"/Users/observe.ai_36/Desktop/live-code-share/src/firebase-config.js",[],"/Users/observe.ai_36/Desktop/live-code-share/src/components/App/App.js",["36","37","38"],"import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Firebase from 'firebase';\nimport rand from 'random-key';\n//component\nimport Editor from '../Editor/Editor';\nimport Button from '../common/button';\nimport CheckButton from '../common/checkButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons';\n//utils\nimport firebaseRealTime from '../../utils/firebaseRealtime';\n\n//css\nimport './App.scss';\n\nconst App = () => {\n  const [html, setHtml] = useState('');\n  const [autoRun, setAutoRun] = useState(true);\n  const [css, setCss] = useState('');\n  const [js, setJs] = useState('');\n  const [iframeSrc, setIframeSrc] = useState('');\n  const [iframeOpen, setIframeOpen] = useState(true);\n  let { sessionId } = useParams();\n  let fireBaseRef = `live-sessions/${sessionId}`;\n  const history = useHistory();\n  let fireBaseDatabaseRef;\n  if (!sessionId) {\n    sessionId = rand.generate(10);\n    fireBaseRef = `live-sessions/${sessionId}`;\n    history.push({ pathname: `/${sessionId}` });\n    firebaseRealTime(Firebase.database().ref(fireBaseRef)).set({\n      html,\n      css,\n      js,\n    });\n  }\n  const setValueFromSnapshot = (\n    snapshot = { val: () => ({ html: '', css: '', js: '' }) }\n  ) => {\n    const { html = '', css = '', js = '' } = snapshot.val() || {};\n    setHtml(html);\n    setCss(css);\n    setJs(js);\n  };\n  fireBaseDatabaseRef = Firebase.database().ref(fireBaseRef);\n\n  useEffect(() => {\n    fireBaseDatabaseRef\n      .once('value')\n      .then((snapshot) => {\n        setValueFromSnapshot(snapshot);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    fireBaseDatabaseRef.on('value', (snapshot) => {\n      setValueFromSnapshot(snapshot);\n    });\n  }, []);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (autoRun) {\n        refreshIframe();\n      } else {\n        timeout && clearTimeout(timeout);\n      }\n    }, 300);\n    return () => timeout && clearTimeout(timeout);\n  }, [html, css, js, autoRun]);\n  const refreshIframe = () => {\n    setIframeSrc(`<html>\n                        <body>${html}</body>\n                         <style>${css}</style>\n                         <script>${js}</script>\n                     </html>`);\n  };\n  const saveToFireBase = (key, value) => {\n    firebaseRealTime(fireBaseDatabaseRef).update({\n      [key]: value,\n    });\n  };\n  return (\n    <>\n      <div className={`pane top-pane ${!iframeOpen ? 'expanded' : ''}`}>\n        <Editor\n          language={'xml'}\n          title={'HTML'}\n          value={html}\n          onChange={(value) => {\n            saveToFireBase('html', value);\n            setHtml(value);\n          }}\n        />\n        <Editor\n          language={'css'}\n          title={'CSS'}\n          value={css}\n          onChange={(value) => {\n            saveToFireBase('css', value);\n            setCss(value);\n          }}\n        />\n        <Editor\n          language={'javascript'}\n          title={'JS'}\n          value={js}\n          onChange={(value) => {\n            saveToFireBase('js', value);\n            setJs(value);\n          }}\n        />\n      </div>\n      <div className={`pane ${!iframeOpen ? 'collapased' : ''}`}>\n        <div className={'iframe-container'}>\n          <header className={'iframe-header'}>\n            <div>Output:-</div>\n            <div\n              className={'iframe-action'}\n              onClick={() => setIframeOpen((prev) => !prev)}\n            >\n              <FontAwesomeIcon\n                icon={iframeOpen ? faCompressAlt : faExpandAlt}\n              />\n            </div>\n          </header>\n          <div>\n            <iframe\n              srcDoc={iframeSrc}\n              title={'output'}\n              sandbox={'allow-scripts'}\n              frameBorder={0}\n              width={'100%'}\n              height={'100%'}\n            ></iframe>\n          </div>\n        </div>\n      </div>\n      <div className={`actionBar ${!iframeOpen ? 'collapased' : ''}`}>\n        {!autoRun && <Button title={'Run'} onClick={refreshIframe} />}\n        <CheckButton\n          checked={autoRun}\n          onChange={() => setAutoRun((prev) => !prev)}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","/Users/observe.ai_36/Desktop/live-code-share/src/components/Editor/Editor.js",[],"/Users/observe.ai_36/Desktop/live-code-share/src/components/common/button/index.js",[],"/Users/observe.ai_36/Desktop/live-code-share/src/components/common/checkButton/index.js",[],"/Users/observe.ai_36/Desktop/live-code-share/src/utils/firebaseRealtime.js",[],{"ruleId":"39","severity":1,"message":"40","line":55,"column":9,"nodeType":"41","messageId":"42","endLine":55,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":60,"column":6,"nodeType":"45","endLine":60,"endColumn":8,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":71,"column":6,"nodeType":"45","endLine":71,"endColumn":30,"suggestions":"48"},"no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fireBaseDatabaseRef'. Either include it or remove the dependency array.","ArrayExpression",["49"],"React Hook useEffect has a missing dependency: 'refreshIframe'. Either include it or remove the dependency array.",["50"],{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [fireBaseDatabaseRef]",{"range":"55","text":"56"},"Update the dependencies array to be: [html, css, js, autoRun, refreshIframe]",{"range":"57","text":"58"},[1840,1842],"[fireBaseDatabaseRef]",[2085,2109],"[html, css, js, autoRun, refreshIframe]"]