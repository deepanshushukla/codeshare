[{"/Users/observe.ai_36/Desktop/live-code-share/src/index.js":"1","/Users/observe.ai_36/Desktop/live-code-share/src/reportWebVitals.js":"2","/Users/observe.ai_36/Desktop/live-code-share/src/firebase-config.js":"3","/Users/observe.ai_36/Desktop/live-code-share/src/components/App/App.js":"4","/Users/observe.ai_36/Desktop/live-code-share/src/components/Editor/Editor.js":"5"},{"size":876,"mtime":1610781162469,"results":"6","hashOfConfig":"7"},{"size":364,"mtime":1610781162469,"results":"8","hashOfConfig":"7"},{"size":413,"mtime":1610781162468,"results":"9","hashOfConfig":"7"},{"size":3021,"mtime":1610781162467,"results":"10","hashOfConfig":"7"},{"size":1551,"mtime":1610781162468,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pjo0tc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/observe.ai_36/Desktop/live-code-share/src/index.js",[],"/Users/observe.ai_36/Desktop/live-code-share/src/reportWebVitals.js",[],[],"/Users/observe.ai_36/Desktop/live-code-share/src/firebase-config.js",[],"/Users/observe.ai_36/Desktop/live-code-share/src/components/App/App.js",["24","25","26","27"],"import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Firebase from 'firebase';\nimport rand from 'random-key';\n//component\nimport Editor from '../Editor/Editor';\n//css\nimport './App.scss';\n\nconst App = () => {\n  const [html, setHtml] = useState('');\n  const [css, setCss] = useState('');\n  const [js, setJs] = useState('');\n  const [iframeSrc, setIframeSrc] = useState('');\n  let { sessionId } = useParams();\n  const history = useHistory();\n  let fireBaseDatabaseRef;\n  const setValueFromSnapshot = (\n    snapshot = { val: () => ({ html: '', css: '', js: '' }) }\n  ) => {\n    const { html = '', css = '', js = '' } = snapshot.val();\n    setHtml(html);\n    setCss(css);\n    setJs(js);\n  };\n  useEffect(() => {\n    if (!sessionId) {\n      sessionId = rand.generate(10);\n      history.push({ pathname: `/${sessionId}` });\n      Firebase.database()\n        .ref('live-sessions/' + sessionId)\n        .set({\n          html,\n          css,\n          js,\n        });\n    }\n    fireBaseDatabaseRef = Firebase.database().ref('live-sessions/' + sessionId);\n  }, []);\n  useEffect(() => {\n    fireBaseDatabaseRef\n      .once('value')\n      .then((snapshot) => {\n        setValueFromSnapshot(snapshot);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    fireBaseDatabaseRef.on('value', (snapshot) => {\n      setValueFromSnapshot(snapshot);\n    });\n  }, []);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIframeSrc(`<html>\n                        <body>${html}</body>\n                         <style>${css}</style>\n                         <script>${js}</script>\n                     </html>`);\n    }, 300);\n    return () => clearTimeout(timeout);\n  }, [html, css, js]);\n\n  const saveToFireBase = (key, value) => {\n    Firebase.database()\n      .ref('live-sessions/' + sessionId)\n      .update({\n        [key]: value,\n      });\n  };\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language={'xml'}\n          title={'HTML'}\n          value={html}\n          onChange={(value) => {\n            saveToFireBase('html', value);\n            setHtml(value);\n          }}\n        />\n        <Editor\n          language={'css'}\n          title={'CSS'}\n          value={css}\n          onChange={(value) => {\n            saveToFireBase('css', value);\n            setCss(value);\n          }}\n        />\n        <Editor\n          language={'javascript'}\n          title={'JS'}\n          value={js}\n          onChange={(value) => {\n            saveToFireBase('js', value);\n            setJs(value);\n          }}\n        />\n      </div>\n      <div className=\"pane\">\n        <div>\n          <div>\n            <iframe\n              srcDoc={iframeSrc}\n              title={'output'}\n              sandbox={'allow-scripts'}\n              frameBorder={0}\n              width={'100%'}\n              height={'100%'}\n            ></iframe>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","/Users/observe.ai_36/Desktop/live-code-share/src/components/Editor/Editor.js",[],{"ruleId":"28","severity":1,"message":"29","line":28,"column":19,"nodeType":"30","endLine":28,"endColumn":36},{"ruleId":"28","severity":1,"message":"31","line":38,"column":27,"nodeType":"30","endLine":38,"endColumn":80},{"ruleId":"32","severity":1,"message":"33","line":47,"column":9,"nodeType":"34","messageId":"35","endLine":47,"endColumn":20},{"ruleId":"28","severity":1,"message":"36","line":52,"column":6,"nodeType":"37","endLine":52,"endColumn":8,"suggestions":"38"},"react-hooks/exhaustive-deps","Assignments to the 'sessionId' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'fireBaseDatabaseRef' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-console","Unexpected console statement.","MemberExpression","unexpected","React Hook useEffect has a missing dependency: 'fireBaseDatabaseRef'. Either include it or remove the dependency array.","ArrayExpression",["39"],{"desc":"40","fix":"41"},"Update the dependencies array to be: [fireBaseDatabaseRef]",{"range":"42","text":"43"},[1421,1423],"[fireBaseDatabaseRef]"]